{"version":3,"sources":["assets/food.svg","components/Navbar.js","firebase/config.js","pages/create/Create.js","assets/trashcan.svg","components/RecipeList.js","pages/home/Home.js","assets/update.svg","assets/close.svg","components/Modal.js","pages/recipe/Recipe.js","App.js","index.js"],"names":["Navbar","className","to","src","foodIcon","alt","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","Create","useState","title","setTitle","method","setMethod","cookingTime","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientinput","useRef","navigate","useNavigate","handleSubmit","e","a","preventDefault","doc","collection","add","console","log","onSubmit","type","onChange","target","value","required","ref","onClick","ing","trim","includes","prevIngredients","current","focus","map","item","RecipeList","recipes","length","recipe","substring","id","trashcan","delete","Home","data","setData","isPending","setIsPending","error","setError","useEffect","unsub","onSnapshot","snapshot","empty","results","docs","forEach","push","err","message","Modal","open","onClose","join","useParams","set","split","update","closeIcon","cols","rows","parseInt","Recipe","isOpen","setIsOpen","exists","updateIcon","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29714f29.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/food.eb8ba109.svg\";","// importing Link from react-router-dom and it lets the user navigate to another page by clicking\nimport { Link } from \"react-router-dom\"\nimport foodIcon from \"../assets/food.svg\"\n\n// styles\nimport \"./Navbar.css\"\n\nfunction Navbar() {\n  return (\n    <div className=\"navbar\">\n      <nav>\n        <Link to=\"/\" className=\"brand\">\n          <img src={foodIcon} alt=\"logo\" />\n          <h1>Recipe App</h1>\n        </Link>\n        \n        <Link to=\"/create\">Create recipe</Link>\n      </nav>\n    </div>\n  )\n}\nexport default Navbar;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCc1GIwuM9hGW9b-_0mGXbwBfa41JzKN98\",\n  authDomain: \"recipe-app-ee508.firebaseapp.com\",\n  projectId: \"recipe-app-ee508\",\n  storageBucket: \"recipe-app-ee508.appspot.com\",\n  messagingSenderId: \"401825885130\",\n  appId: \"1:401825885130:web:af1405e64e4e2892a77d33\",\n};\n\n// initialising firebase\nfirebase.initializeApp(firebaseConfig);\n\n// initializing services\nconst db = firebase.firestore();\n\nexport { db };","// importing hooks\nimport { useState, useRef } from \"react\"\n\n//importing useNavigate (before useHistory) from react-router-dom v6\nimport { useNavigate } from \"react-router-dom\"\nimport { db } from \"../../firebase/config\"\n\n//styles\nimport \"./Create.css\"\n\nfunction Create() {\n  const [title, setTitle] = useState(\"\")\n  const [method, setMethod] = useState(\"\")\n  const [cookingTime, setCookingTime] = useState(\"\")\n  const [newIngredient, setNewIngredient] = useState(\"\")\n  const [ingredients, setIngredients] = useState([])\n\n  // return object {current: null}\n  const ingredientinput = useRef(null)\n  const navigate = useNavigate()\n\n  // asynchronous submit function\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const doc = {\n      title,\n      ingredients,\n      method,\n      cookingTime: cookingTime + \" minutes\",\n    }\n\n    try {\n      await db.collection(\"Recipes\").add(doc)\n      navigate(\"/\") //before useHistory.push('/')\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const handleAdd = (e) => {\n    e.preventDefault()\n\n    // removes whitespace\n    const ing = newIngredient.trim()\n\n    //checking for no duplicate values. No repeat\n    if (ing && !ingredients.includes(ing)) {\n      setIngredients((prevIngredients) => [...prevIngredients, ing])\n    }\n\n    // Resets state and focuses on input field\n    setNewIngredient(\"\")\n    ingredientinput.current.focus()\n  }\n\n  return (\n    <div className=\"create\">\n      <h2 className=\"page-title\">Add a new recipe</h2>\n\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>Recipe title:</span>\n          <input\n            type=\"text\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n            required\n          />\n        </label>\n\n        <label>\n          <span>Recipe ingredients:</span>\n          <div className=\"ingredients\">\n            <input\n              type=\"text\"\n              onChange={(e) => setNewIngredient(e.target.value)}\n              value={newIngredient}\n              ref={ingredientinput} //focus input fields - useRef {current: input}\n            />\n            <button onClick={handleAdd} className=\"btn\">\n              add\n            </button>\n          </div>\n        </label>\n        <p>\n          Current ingredients:{\" \"}\n          {ingredients.map((item) => (\n            <em key={item}>{item}, </em>\n          ))}\n        </p>\n\n        <label>\n          <span>Recipe method:</span>\n          <textarea\n            onChange={(e) => setMethod(e.target.value)}\n            value={method}\n            required\n          />\n        </label>\n\n        <label>\n          <span>Cooking time in (minutes):</span>\n          <input\n            type=\"number\"\n            onChange={(e) => setCookingTime(e.target.value)}\n            value={cookingTime}\n            required\n          />\n        </label>\n\n        <button className=\"btn\">submit</button>\n      </form>\n    </div>\n  )\n}\nexport default Create\n","export default __webpack_public_path__ + \"static/media/trashcan.2b385a41.svg\";","import { Link } from \"react-router-dom\";\nimport trashcan from '../assets/trashcan.svg';\nimport { db } from '../firebase/config';\n\n// styles\nimport \"./RecipeList.css\";\n\nfunction RecipeList({ recipes }) {\n\n  // checking if there is any recipes, if not then error message\n  if (recipes.length === 0) {\n    return <div className=\"error\">No recipes to load...</div>;\n  }\n\n  // taking id as a parameter to delete a recipe, and then passing the recipe id in as argument when clicked\n  const handleClick = (id) => {\n    db.collection('Recipes').doc(id).delete()\n  }\n  \n  return (\n    <div className=\"recipe-list\">\n      {/* Creating components from arrays ?? */}\n      {recipes.map((recipe) => (\n        <div key={recipe.id} className=\"card\">\n          <h3>{recipe.title}</h3>\n          <p>{recipe.cookingTime} to make.</p>\n          <div>{recipe.method.substring(0, 100)}...</div>\n          <Link to={`/recipes/${recipe.id}`}>Cook This</Link>\n          <img \n            className=\"delete\"\n            src={trashcan}\n            onClick={() => handleClick(recipe.id)}\n            alt=\"icon for deleting recipe\"\n            />\n        </div>\n      ))}\n    </div>\n  );\n}\nexport default RecipeList;\n","import { db } from '../../firebase/config'\nimport { useEffect, useState } from 'react';\n\n// styles\nimport './Home.css';\n\n//components\nimport RecipeList from '../../components/RecipeList';\n\n\nfunction Home() {\n    const [data, setData] = useState(null)\n    const [isPending, setIsPending] = useState(false)\n    const [error, setError] = useState(false)\n\n    //useEffect is fired after the page is rendered\n    useEffect(() => {\n        setIsPending(true)\n\n        //fetching data\n        const unsub = db.collection('Recipes').onSnapshot((snapshot) => {\n            console.log(snapshot)\n            //outputting error if no recipe - empty firebase property\n            if (snapshot.empty) {\n                setError('No recipes to load')\n                setIsPending(false)\n            } else {\n                let results = []\n                // outputting data\n                snapshot.docs.forEach(doc => {\n                    //object representing a single recipe\n                    results.push({ id: doc.id, ...doc.data()})\n                })\n                setData(results)\n                setIsPending(false)\n            }\n        }, (err) => {\n            setError(err.message)\n            setIsPending(false)\n        })\n\n        // cleanup funtion invoked - stop listening when unmounting\n        return () => unsub()\n\n    }, [])\n\n    return(\n        <div className='home'>\n            {/* conditional rendering using logical and */}\n            {error && <p className='error'>{error}</p>}\n            {isPending && <p className='loading'>Loading...</p>}\n            {data && <RecipeList recipes={data} />}\n        </div>\n    )\n}\nexport default Home;","export default __webpack_public_path__ + \"static/media/update.9d5342f1.svg\";","export default __webpack_public_path__ + \"static/media/close.d5e5ff10.svg\";","import { useState } from \"react\"\nimport closeIcon from \"../assets/close.svg\"\nimport { db } from \"../firebase/config\"\nimport { useParams } from \"react-router-dom\"\n\n//styles\nimport \"./Modal.css\"\n\nfunction Modal({ open, onClose, data }) {\n  const [title, setTitle] = useState(data.title)\n  const [method, setMethod] = useState(data.method)\n  const [cookingTime, setCookingTime] = useState(data.cookingTime)\n  const [ingredients, setIngredients] = useState(data.ingredients.join(\", \"))\n\n  const { id } = useParams()\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    try {\n      // set() - to create/get a single document\n      db.collection(\"Recipes\").doc(id).set({\n        title: title,\n        ingredients: ingredients.split(\",\"),\n        method: method,\n        cookingTime: cookingTime + \" minutes\",\n      })\n\n      await db\n        .collection(\"Recipes\")\n        .doc(id)\n        .update({\n          title: title,\n          ingredients: ingredients.split(\",\"),\n          method: method,\n          cookingTime: cookingTime,\n        })\n      onClose()\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  // if open (prop state) is false then return null, so basically hiding modal\n  if (!open) return null\n\n  return (\n    <>\n      <div className=\"overlay\" />\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <img\n            src={closeIcon}\n            className=\"close\"\n            onClick={onClose}\n            alt=\"icon for closing modal\"\n          />\n          <h2 className=\"modal-title\">Update recipe</h2>\n        </div>\n\n        <form onSubmit={handleSubmit}>\n          <label>\n            <span>Recipe title:</span>\n            <input\n              type=\"text\"\n              onChange={(e) => setTitle(e.target.value)}\n              value={title}\n              required\n            />\n          </label>\n\n          <label>\n            <span>Recipe ingredients:</span>\n            <div className=\"ingredients\">\n              <textarea\n                value={ingredients}\n                onChange={(e) => setIngredients(e.target.value)}\n                cols=\"30\"\n                rows=\"5\"\n                required\n              />\n            </div>\n          </label>\n\n          <label>\n            <span>Recipe method:</span>\n            <textarea\n              onChange={(e) => setMethod(e.target.value)}\n              value={method}\n              required\n            />\n          </label>\n\n          <label>\n            <span>Cooking time in (minutes):</span>\n            <input\n              type=\"number\"\n              onChange={(e) => setCookingTime(e.target.value)}\n              value={parseInt(cookingTime)}\n              required\n            />\n          </label>\n\n          <button className=\"btn\">update</button>\n        </form>\n      </div>\n    </>\n  )\n}\nexport default Modal;\n","//importing useParams for specifying which recipe (id) we want to display\nimport { useParams } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { db } from \"../../firebase/config\"\nimport updateIcon from \"../../assets/update.svg\"\n\n//components\nimport Modal from \"../../components/Modal\"\n\n//styles\nimport \"./Recipe.css\"\n\nfunction Recipe() {\n  const { id } = useParams() //gets id from url\n\n  const [data, setData] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const [error, setError] = useState(false)\n  const [isOpen, setIsOpen] = useState(false)\n\n  //useEffect is fired after the page is rendered\n  useEffect(() => {\n    setIsPending(true)\n    //fetching data\n    const unsub = db\n      .collection(\"Recipes\")\n      .doc(id)\n      .onSnapshot((doc) => {\n        //outputting data\n        if (doc.exists) {\n          setIsPending(false)\n          setData(doc.data())\n        } else {\n          // outputting error if no recipe\n          setIsPending(false)\n          setError(\"Could not find that recipe\")\n        }\n      })\n\n    // cleanup function\n    return () => unsub()\n  }, [id])\n\n  return (\n    <div className=\"recipe\">\n      {/* Inline If-Else with Conditional Operator */}\n      {/* {error ? <p className=\"error\">{error}</p> : \"\"} */}\n\n      {/* conditional rendering using logical and */}\n      {error && <p className=\"error\">{error}</p>}\n      {isPending && <p className=\"loading\">Loading...</p>}\n      {data && (\n        <>\n          <h2 className=\"page-title\">{data.title}</h2>\n          <p>Takes {data.cookingTime} to cook.</p>\n          <ul>\n            {/* using map */}\n            {data.ingredients.map((ing) => (\n              <li key={ing}>{ing}</li>\n            ))}\n          </ul>\n          <p className=\"method\">{data.method}</p>\n          <img\n            src={updateIcon}\n            className=\"update\"\n            onClick={() => setIsOpen(true)}\n            alt=\"icon for updating recipe\"\n          />\n          <Modal open={isOpen} data={data} onClose={() => setIsOpen(false)} />\n        </>\n      )}\n    </div>\n  )\n}\nexport default Recipe\n","//importing browserRouter, Routes (before Switch) and Route from react-router-dom v6\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\n\n// page components\nimport Navbar from \"./components/Navbar\"\nimport Create from \"./pages/create/Create\"\nimport Home from \"./pages/home/Home\"\nimport Recipe from \"./pages/recipe/Recipe\"\n\n// styles\nimport \"./App.css\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar />\n        <Routes>\n          <Route exact path=\"/\" element={<Home />} />\n          <Route exact path=\"/create\" element={<Create />} />\n          <Route exact path=\"/recipes/:id\" element={<Recipe />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}